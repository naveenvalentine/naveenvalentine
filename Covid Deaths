SELECT TOP (1000) [iso_code]
      ,[continent]
      ,[location]
      ,[date]
      ,[population]
      ,[total_cases]
      ,[new_cases]
      ,[new_cases_smoothed]
      ,[total_deaths]
      ,[new_deaths]
      ,[new_deaths_smoothed]
      ,[total_cases_per_million]
      ,[new_cases_per_million]
      ,[new_cases_smoothed_per_million]
      ,[total_deaths_per_million]
      ,[new_deaths_per_million]
      ,[new_deaths_smoothed_per_million]
      ,[reproduction_rate]
      ,[icu_patients]
      ,[icu_patients_per_million]
      ,[hosp_patients]
      ,[hosp_patients_per_million]
      ,[weekly_icu_admissions]
      ,[weekly_icu_admissions_per_million]
      ,[weekly_hosp_admissions]
      ,[weekly_hosp_admissions_per_million]
  FROM [portfolio project].[dbo].[COVIDDEATHS]
 SELECT * FROM COVIDDEATHS
 WHERE continent IS NOT NULL
 ORDER BY 3,4

 SELECT * FROM COVIDVACCINATION
 ORDER BY 3,4

 SELECT LOCATION,DATE,TOTAL_CASES,NEW_CASES,TOTAL_DEATHS,POPULATION
 FROM COVIDDEATHS
 ORDER BY 1,2
 -- LOKING TOTAL CASES VS TOTAL DEATHS
 --SHOW LIKE HOOD OF DYING IF YOU CONTRACT COVID IN YOUR COUNTRY 
  SELECT LOCATION,DATE,TOTAL_CASES,TOTAL_DEATHS,(total_deaths/total_cases)*100 AS DEATHPERCENTAGE
 FROM COVIDDEATHS
 WHERE LOCATION LIKE'%STATES%'
 ORDER BY 1,2

 --LOOKING AT TOTAL CASES VS POPULATION
 --SHOW AS PERCENTAGE OF POPULATION GOT COVID
 SELECT LOCATION,DATE,TOTAL_CASES,population,TOTAL_DEATHS,(total_cases/population)*100 AS DEATHPERCENTAGE
 FROM COVIDDEATHS
 WHERE LOCATION LIKE'%STATES%'
 ORDER BY 1,2


--LOOKING AT COUNTRIES WITH HIGHEST INFECTION RATE COMPARED TO POPULATION
 SELECT LOCATION,MAX(TOTAL_CASES)AS HIGHESTINFECTIONCOUNT,population,MAX(total_cases/population)*100 AS PERCENTPOPULATIONINFECTED
 FROM COVIDDEATHS
-- WHERE LOCATION LIKE'%STATES%'
GROUP BY location,population
 ORDER BY PERCENTPOPULATIONINFECTED DESC

 --SHOWING COUNTRIES WITH HIGHEST DEATH COUNT PER POPULATION 
  SELECT LOCATION,MAX(CAST(TOTAL_DEATHS AS INT)) AS TOTALDEATHCOUNT
 FROM COVIDDEATHS
-- WHERE LOCATION LIKE'%STATES%'
WHERE continent IS NOT NULL
GROUP BY location
 ORDER BY TOTALDEATHCOUNT DESC


 --LET'S BREAK THINGS DOWN BY CONTINENT


 SELECT  CONTINENT,MAX(CAST(TOTAL_DEATHS AS INT)) AS TOTALDEATHCOUNT
 FROM COVIDDEATHS
-- WHERE LOCATION LIKE'%STATES%'
WHERE continent IS NOT NULL
GROUP BY  CONTINENT
 ORDER BY TOTALDEATHCOUNT DESC

 --SHOWING CONTINENTS WITH TTHE HIGHEST DEATH COUNT PER POPULATION

  SELECT  CONTINENT,MAX(CAST(TOTAL_DEATHS AS INT)) AS TOTALDEATHCOUNT
 FROM COVIDDEATHS
-- WHERE LOCATION LIKE'%STATES%'
WHERE continent IS NOT NULL
GROUP BY  CONTINENT
 ORDER BY TOTALDEATHCOUNT DESC

 --GLOBAL NUMBERS
   SELECT SUM(NEW_CASES)AS TOTAL_CASES,SUM(CAST(NEW_DEATHS AS INT)),SUM(CAST(NEW_DEATHS AS INT))/SUM(NEW_CASES)*100 AS DEATHPERCENTAGE
 FROM COVIDDEATHS
 --WHERE LOCATION LIKE'%STATES%'
 WHERE continent IS NOT NULL
-- GROUP BY DATE 
 ORDER BY 1,2



 SELECT * FROM COVIDVACCINATIONS

 --LOOKING AT TOTAL POPULATION VS VACCINATION
 SELECT  DEA.continent,DEA.location,DEA.date,DEA.POPULATION,VAC.new_vaccinations,SUM(CONVERT(INT,VAC.new_vaccinations)) OVER (PARTITION BY DEA.LOCATION order by dea.location,dea.date)
 AS ROLLINGPEOPLEVACCINATED
 --,(ROLLINGPEOPLEVACCINATED/POPULATION)*100
 FROM COVIDDEATHS DEA
 JOIN COVIDVACCINATIONS VAC
 ON DEA.LOCATION=VAC.LOCATION
 AND DEA.DATE=VAC.DATE
 WHERE DEA.continent IS NOT NULL
 ORDER BY 2,3

 --USE CTE
 WITH POPVSVAC (CONTINENT,LOCATION,DATE,POPULATION,NEW_VACCINATIONS,ROLLINGPEOPLEVACCINATED)
 AS
 (
  SELECT  DEA.continent,DEA.location,DEA.date,DEA.POPULATION,VAC.new_vaccinations,SUM(CONVERT(INT,VAC.new_vaccinations)) OVER (PARTITION BY DEA.LOCATION order by dea.location,dea.date)
 AS ROLLINGPEOPLEVACCINATED/POPULATION)*100
 FROMROLLINGPEOPLEVACCINATED
 --,( COVIDDEATHS DEA
 JOIN COVIDVACCINATIONS VAC
 ON DEA.LOCATION=VAC.LOCATION
 AND DEA.DATE=VAC.DATE
 WHERE DEA.continent IS NOT NULL
 --ORDER BY 2,3
)
SELECT *,(ROLLINGPEOPLEVACCINATED/POPULATION)*100
FROM POPVSVAC




--TEMP TABLE
DROP TABLE IF EXISTS #PERCENTAGEPOPULATIONVACCINATED
CREATE TABLE #PERCENTAGEPOPULATIONVACCINATED
(
CONTINENT NVARCHAR(255),
LOCATION NVARCHAR(255),
DATE DATETIME,
POPULATION NUMERIC,
NEW_VACINATIONS NUMERIC,
ROLLINGPEOPLEVACCINATED NUMERIC
)
INSERT INTO #PERCENTAGEPOPULATIONVACCINATED
SELECT  DEA.continent,DEA.location,DEA.date,DEA.POPULATION,VAC.new_vaccinations,SUM(CONVERT(INT,VAC.new_vaccinations)) OVER (PARTITION BY DEA.LOCATION order by dea.location,dea.date)
 AS ROLLINGPEOPLEVACCINATED
 --,(ROLLINGPEOPLEVACCINATED/POPULATION)*100
 FROM COVIDDEATHS DEA
 JOIN COVIDVACCINATIONS VAC
 ON DEA.LOCATION=VAC.LOCATION
 AND DEA.DATE=VAC.DATE
 WHERE DEA.continent IS NOT NULL
 --ORDER BY 2,3
 SELECT *,(ROLLINGPEOPLEVACCINATED/POPULATION)*100
FROM #PERCENTAGEPOPULATIONVACCINATED


--CREATING VIEW TO STORE DATA FOR LATER VISUALIZATION

CREATE VIEW PERCENTAGRPOPULATIONVACCINATED AS
 SELECT  DEA.continent,DEA.location,DEA.date,DEA.POPULATION,VAC.new_vaccinations,SUM(CONVERT(INT,VAC.new_vaccinations)) OVER (PARTITION BY DEA.LOCATION order by dea.location,dea.date)
 AS ROLLINGPEOPLEVACCINATED
 --,(ROLLINGPEOPLEVACCINATED/POPULATION)*100
 FROM COVIDDEATHS DEA
 JOIN COVIDVACCINATIONS VAC
 ON DEA.LOCATION=VAC.LOCATION
 AND DEA.DATE=VAC.DATE
 WHERE DEA.continent IS NOT NULL
 --ORDER BY 2,3


 SELECT * FROM PERCENTAGRPOPULATIONVACCINATED
